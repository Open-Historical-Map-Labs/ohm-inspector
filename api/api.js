var openhistoricalmap=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/api/",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n(1),n(2),n(3);var r=n(4);t.default=r},function(e,t){var n,r,o,i;Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector),Element.prototype.closest||(Element.prototype.closest=function(e){var t=this;if(!document.documentElement.contains(t))return null;do{if(t.matches(e))return t;t=t.parentElement||t.parentNode}while(null!==t&&1===t.nodeType);return null}),"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value:function(e){"use strict";if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t},writable:!0,configurable:!0}),Array.prototype.forEach||(Array.prototype.forEach=function(e){var t,n;if(null==this)throw new TypeError("this is null or not defined");var r=Object(this),o=r.length>>>0;if("function"!=typeof e)throw new TypeError(e+" is not a function");for(arguments.length>1&&(t=arguments[1]),n=0;n<o;){var i;n in r&&(i=r[n],e.call(t,i,n,r)),n++}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),Array.from||(Array.from=(n=Object.prototype.toString,r=function(e){return"function"==typeof e||"[object Function]"===n.call(e)},o=Math.pow(2,53)-1,i=function(e){var t=function(e){var t=Number(e);return isNaN(t)?0:0!==t&&isFinite(t)?(t>0?1:-1)*Math.floor(Math.abs(t)):t}(e);return Math.min(Math.max(t,0),o)},function(e){var t=this,n=Object(e);if(null==e)throw new TypeError("Array.from requires an array-like object - not null or undefined");var o,a=arguments.length>1?arguments[1]:void 0;if(void 0!==a){if(!r(a))throw new TypeError("Array.from: when provided, the second argument must be a function");arguments.length>2&&(o=arguments[2])}for(var l,c=i(n.length),s=r(t)?Object(new t(c)):new Array(c),u=0;u<c;)l=n[u],s[u]=a?void 0===o?a(l,u):a.call(o,l,u):l,u+=1;return s.length=c,s}))},function(e,t,n){},function(e,t){},function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n.r(t),n.d(t,"OpenHistoricaMapInspector",(function(){return o}));var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=Object.assign({apiBaseUrl:"https://openhistoricalmap.org/api/",apiVersion:"0.6",classicDivQuerySelector:"#sidebar_content div.browse-section",featureTitleBar:"#sidebar_content > h2",onFeatureLoaded:function(){},debug:!1},t),this.options.debug&&console.debug(["OpenHistoricaMapInspector loaded options",this.options]),this.oldpanel=document.querySelector(this.options.classicDivQuerySelector),this.titlebar=document.querySelector(this.options.featureTitleBar),this.mypanel=document.createElement("DIV"),this.mypanel.classList.add("openhistoricalmap-inspector-panel"),this.oldpanel.parentNode.insertBefore(this.mypanel,this.oldpanel),this.hideClassicPanel()}var t,n,o;return t=e,(n=[{key:"selectFeature",value:function(e,t){var n=this,r="".concat(this.options.apiBaseUrl,"/").concat(this.options.apiVersion,"/").concat(e,"/").concat(t);this.options.debug&&console.debug("OpenHistoricaMapInspector selectFeature(".concat(e,", ").concat(t,") => ").concat(r));var o=new XMLHttpRequest;o.open("GET",r),o.onload=function(){if(n.mypanel.innerHTML="",404==o.status)return n.titlebar.innerHTML="Not Found",void(n.mypanel.innerHTML="<p>No such feature: ".concat(e," ").concat(t,"</p>"));var r=(new DOMParser).parseFromString(o.response,"text/xml");n.renderFeatureDetails(e,t,r)},o.onerror=function(){alert("Unable to contact the OHM server at this time. Please try again later.")},o.send()}},{key:"renderFeatureDetails",value:function(e,t,n){console.debug([e,t,n])}},{key:"showClassicPanel",value:function(){this.oldpanel.style.display="block",this.mypanel.style.display="none"}},{key:"hideClassicPanel",value:function(){this.oldpanel.style.display="none",this.mypanel.style.display="block"}}])&&r(t.prototype,n),o&&r(t,o),e}()}]).default;
//# sourceMappingURL=api.js.map